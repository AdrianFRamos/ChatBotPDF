name: CI/CD Pipeline

on:
  push:
    branches:
      - main      # Produção
      - dev       # Desenvolvimento
      - stage     # Staging

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20' 
      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker images
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker-compose -f docker-compose.yml build

  deploy-prod:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to Production
        run: |
          ssh usuario@ip-da-vm "cd /caminho/da/aplicacao && docker-compose -f docker-compose.yml up -d --remove-orphans"

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/dev'
    
    steps:
      - name: Deploy to Development
        run: |
          ssh usuario@ip-da-vm "cd /caminho/da/aplicacao && docker-compose -f docker-compose.yml up -d --remove-orphans"

  deploy-stage:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/stage'
    
    steps:
      - name: Deploy to Staging
        run: |
          ssh usuario@ip-da-vm "cd /caminho/da/aplicacao && docker-compose -f docker-compose.yml up -d --remove-orphans"
